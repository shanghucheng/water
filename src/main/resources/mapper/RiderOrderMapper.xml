<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.water.mapper.RiderOrderMapper" >
  <resultMap id="BaseResultMap" type="com.water.entity.RiderOrder" >
    <!--
      WARNING - @mbg.generated
    -->
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="riderId" property="riderid" jdbcType="INTEGER" />
    <result column="orderId" property="orderid" jdbcType="INTEGER" />
    <result column="orderTime" property="ordertime" jdbcType="VARCHAR" />
  </resultMap>

  <select id="getRiderOrderAll" parameterType="String" resultType="map">
    SELECT
      concat( riderorder.id, '' ) id,
      concat( riderorder.riderId, '' ) riderId,
      concat( riderorder.orderId, '' ) orderId,
      riderorder.orderTime,
      concat( orders.userId, '' ) userId,
      concat( orders.addressId, '' ) addressId,
      orders.totalNum,
      orders.totalPrice,
      orders.orderDate,
      orders.orderState,
      address.userName,
      address.telNumber,
      address.provinceName,
      address.cityName,
      address.countyName,
      address.detailInfo
    FROM
      `riderorder`
        LEFT JOIN rider ON rider.id = riderorder.riderId
        LEFT JOIN orders ON orders.id = riderorder.orderId
        LEFT JOIN address ON address.id = orders.addressId
    WHERE 1=1
      and rider.id=#{id}
    <if test="orderstate!='' and orderstate!=null">
      AND orders.orderState=#{orderstate}
    </if>
    <if test="orderstate!='' and orderstate!=null">
      ORDER BY
      riderorder.orderTime desc
    </if>
    <if test="orderstate=='' or orderstate==null">
      ORDER BY
      orderId DESC
    </if>
  </select>

  <insert id="insertRiderOrder">
    INSERT INTO `water`.`riderorder` ( `riderId`, `orderId`, `orderTime`)
    VALUES
      (#{riderid}, #{orderid},#{ordertime} );
  </insert>

  <select id="getRiderOrderByIdMonth" parameterType="String" resultType="map">
    SELECT
      concat( riderorder.id, '' ) id,
      concat( riderorder.riderId, '' ) riderId,
      concat( riderorder.orderId, '' ) orderId,
      riderorder.orderTime,
      concat( orders.userId, '' ) userId,
      concat( orders.addressId, '' ) addressId,
      orders.totalNum,
      orders.totalPrice,
      orders.orderDate,
      orders.orderState,
      address.userName,
      address.telNumber,
      address.provinceName,
      address.cityName,
      address.countyName,
      address.detailInfo
    FROM
      `riderorder`
        LEFT JOIN rider ON rider.id = riderorder.riderId
        LEFT JOIN orders ON orders.id = riderorder.orderId
        LEFT JOIN address ON address.id = orders.addressId
    WHERE
      1 = 1
      AND rider.id = #{id}
      AND substr( riderorder.orderTime, 1, 10 ) BETWEEN DATE_sub( STR_TO_DATE( now( ), '%Y-%m-%d' ), INTERVAL 1 MONTH )
      AND STR_TO_DATE( now( ), '%Y-%m-%d' )
    ORDER BY
      riderorder.orderTime DESC
  </select>

  <select id="getRiderOrderByIdWeek" parameterType="String" resultType="map">
    SELECT
      concat( riderorder.id, '' ) id,
      concat( riderorder.riderId, '' ) riderId,
      concat( riderorder.orderId, '' ) orderId,
      riderorder.orderTime,
      concat( orders.userId, '' ) userId,
      concat( orders.addressId, '' ) addressId,
      orders.totalNum,
      orders.totalPrice,
      orders.orderDate,
      orders.orderState,
      address.userName,
      address.telNumber,
      address.provinceName,
      address.cityName,
      address.countyName,
      address.detailInfo
    FROM
      `riderorder`
        LEFT JOIN rider ON rider.id = riderorder.riderId
        LEFT JOIN orders ON orders.id = riderorder.orderId
        LEFT JOIN address ON address.id = orders.addressId
    WHERE
      1 = 1
      AND rider.id = #{id}
      AND substr( riderorder.orderTime, 1, 10 ) BETWEEN DATE_sub( STR_TO_DATE( now( ), '%Y-%m-%d' ), INTERVAL 7 DAY )
      AND STR_TO_DATE( now( ), '%Y-%m-%d' )
    ORDER BY
      riderorder.orderTime DESC
  </select>
</mapper>